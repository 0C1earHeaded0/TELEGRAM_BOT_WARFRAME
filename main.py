import logging
import requests
from telegram import Update, Chat, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters, CallbackQueryHandler

def isServerAvailable():
    if requests.get("https://api.warframestat.us/pc").status_code != 200:
        return False
    else:
        return True

keyboardForCetusStatus = [
    [
        InlineKeyboardButton("–¶–ï–¢–£–° (–†–ê–í–ù–ò–ù–´ –≠–ô–î–û–õ–û–ù–ê)", callback_data='1')
    ],
    [
        InlineKeyboardButton("–ö–∞–º–±–∏–æ–Ω—Å–∫–∏–π –î—Ä–µ–∏ÃÜ—Ñ (–î–µ–π–º–æ—Å)", callback_data='2')
    ]
]

keyboard = InlineKeyboardMarkup(keyboardForCetusStatus)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                   text=
                                   "–ü—Ä–∏–≤–µ—Ç!üëã\n"
                                   "–Ø –±–æ—Ç –ø–æ –∏–≥—Ä–µ Warframe!\n"
                                   "–Ø –ø—Ä–∏–∑–≤–∞–Ω —É–ø—Ä–æ—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞ –∏–≥—Ä–æ–≤—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ üòâ\n"
                                   "üåç –í—ã–±–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É:",
                                   reply_markup=keyboard)
    if not isServerAvailable():
        await context.bot.send_message(chat_id=update.effective_chat.id, 
                                       text="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç :(\n–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ–∑–∂–µ!")
        return



async def cetus(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not isServerAvailable():
        await context.bot.send_message(chat_id=update.effective_chat.id, 
                                       text="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç :(\n–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ–∑–∂–µ!")
        return
    else:
        cetusStatus = requests.get("https://api.warframestat.us/pc/cetusCycle?language=ru").json()
        await context.bot.send_message(chat_id=update.effective_chat.id, 
                                       text=
                                        "--------------\n"
                                        "–¶–ï–¢–£–° (–ó–ï–ú–õ–Ø):\n"
                                        "--------------\n"
                                        f"üåç –°–µ–π—á–∞—Å –Ω–∞ –¶–µ—Ç—É—Å–µ: {"–î–µ–Ω—å ‚òÄÔ∏è" if cetusStatus["isDay"] else '–ù–æ—á—å üåë'}\n"
                                        f"‚è±Ô∏è –î–æ —Å–º–µ–Ω—ã —Ü–∏–∫–ª–∞ –æ—Å—Ç–∞–ª–æ—Å—å: {cetusStatus['timeLeft']}\n",
                                        )
async def cambionDrift(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not isServerAvailable():
        await context.bot.send_message(chat_id=update.effective_chat.id, 
                                       text="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç :(\n–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ–∑–∂–µ!")
        return
    else:
        cambionStatus = requests.get("https://api.warframestat.us/pc/cambionCycle?language=ru").json()
        await context.bot.send_message(chat_id=update.effective_chat.id, 
                                       text=
                                        "--------------\n"
                                        "–ö–ê–ú–ë–ò–û–ù–°–ö–ò–ô –î–†–ï–ô–§ (–î–ï–ô–ú–û–°):\n"
                                        "--------------\n"
                                        f"ü™± –°–µ–π—á–∞—Å —Ü–∞—Ä—Å—Ç–≤—É–µ—Ç: {"–í–æ—É–º" if cambionStatus["state"] == "vome" else "–§—ç–∑"}\n"
                                        f"‚è±Ô∏è –î–æ —Å–º–µ–Ω—ã —Ü–∏–∫–ª–∞ –æ—Å—Ç–∞–ª–æ—Å—å: {cambionStatus['timeLeft']}\n",
                                        )

async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                   text="–ò–∑–≤–∏–Ω–∏, —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã —É –º–µ–Ω—è –ø–æ–∫–∞ –µ—â—ë –Ω–µ—Ç :(")
    
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    
    if query.data == '1': 
        await cetus(update, context)
    elif query.data == '2':
        await cambionDrift(update, context)
        
    await query.answer()
        
if __name__ == '__main__':
    application = ApplicationBuilder().token('7478612676:AAHw8p8z9ONL7BCDlU8e-rInft1DORKKBi4').build()
    application.add_handler(CommandHandler('start', start)) #–î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
    application.add_handler(CommandHandler('cetus', cetus))
    application.add_handler(CommandHandler('cambionDrift', cambionDrift))
    application.add_handler(CallbackQueryHandler(button))
    application.add_handler(MessageHandler(filters.COMMAND, unknown))
    application.run_polling()
    

    
   #TOKEN: 7478612676:AAHw8p8z9ONL7BCDlU8e-rInft1DORKKBi4